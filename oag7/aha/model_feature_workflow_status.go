/*
Aha.io API

Articles that matter on social publishing platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aha

import (
	"encoding/json"
)

// checks if the FeatureWorkflowStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeatureWorkflowStatus{}

// FeatureWorkflowStatus struct for FeatureWorkflowStatus
type FeatureWorkflowStatus struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Position *int64 `json:"position,omitempty"`
	Complete *bool `json:"complete,omitempty"`
	Color *string `json:"color,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FeatureWorkflowStatus FeatureWorkflowStatus

// NewFeatureWorkflowStatus instantiates a new FeatureWorkflowStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureWorkflowStatus() *FeatureWorkflowStatus {
	this := FeatureWorkflowStatus{}
	return &this
}

// NewFeatureWorkflowStatusWithDefaults instantiates a new FeatureWorkflowStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureWorkflowStatusWithDefaults() *FeatureWorkflowStatus {
	this := FeatureWorkflowStatus{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FeatureWorkflowStatus) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureWorkflowStatus) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FeatureWorkflowStatus) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FeatureWorkflowStatus) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FeatureWorkflowStatus) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureWorkflowStatus) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FeatureWorkflowStatus) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FeatureWorkflowStatus) SetName(v string) {
	o.Name = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *FeatureWorkflowStatus) GetPosition() int64 {
	if o == nil || IsNil(o.Position) {
		var ret int64
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureWorkflowStatus) GetPositionOk() (*int64, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *FeatureWorkflowStatus) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int64 and assigns it to the Position field.
func (o *FeatureWorkflowStatus) SetPosition(v int64) {
	o.Position = &v
}

// GetComplete returns the Complete field value if set, zero value otherwise.
func (o *FeatureWorkflowStatus) GetComplete() bool {
	if o == nil || IsNil(o.Complete) {
		var ret bool
		return ret
	}
	return *o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureWorkflowStatus) GetCompleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Complete) {
		return nil, false
	}
	return o.Complete, true
}

// HasComplete returns a boolean if a field has been set.
func (o *FeatureWorkflowStatus) HasComplete() bool {
	if o != nil && !IsNil(o.Complete) {
		return true
	}

	return false
}

// SetComplete gets a reference to the given bool and assigns it to the Complete field.
func (o *FeatureWorkflowStatus) SetComplete(v bool) {
	o.Complete = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *FeatureWorkflowStatus) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureWorkflowStatus) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *FeatureWorkflowStatus) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *FeatureWorkflowStatus) SetColor(v string) {
	o.Color = &v
}

func (o FeatureWorkflowStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeatureWorkflowStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.Complete) {
		toSerialize["complete"] = o.Complete
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FeatureWorkflowStatus) UnmarshalJSON(data []byte) (err error) {
	varFeatureWorkflowStatus := _FeatureWorkflowStatus{}

	err = json.Unmarshal(data, &varFeatureWorkflowStatus)

	if err != nil {
		return err
	}

	*o = FeatureWorkflowStatus(varFeatureWorkflowStatus)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "position")
		delete(additionalProperties, "complete")
		delete(additionalProperties, "color")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFeatureWorkflowStatus struct {
	value *FeatureWorkflowStatus
	isSet bool
}

func (v NullableFeatureWorkflowStatus) Get() *FeatureWorkflowStatus {
	return v.value
}

func (v *NullableFeatureWorkflowStatus) Set(val *FeatureWorkflowStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureWorkflowStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureWorkflowStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureWorkflowStatus(val *FeatureWorkflowStatus) *NullableFeatureWorkflowStatus {
	return &NullableFeatureWorkflowStatus{value: val, isSet: true}
}

func (v NullableFeatureWorkflowStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureWorkflowStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


