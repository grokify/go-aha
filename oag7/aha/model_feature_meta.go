/*
Aha.io API

Articles that matter on social publishing platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aha

import (
	"encoding/json"
	"time"
)

// checks if the FeatureMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeatureMeta{}

// FeatureMeta struct for FeatureMeta
type FeatureMeta struct {
	Id           *string    `json:"id,omitempty"`
	ReferenceNum *string    `json:"reference_num,omitempty"`
	Name         *string    `json:"name,omitempty"`
	CreatedAt    *time.Time `json:"created_at,omitempty"`
	Url          *string    `json:"url,omitempty"`
	Resource     *string    `json:"resource,omitempty"`
}

// NewFeatureMeta instantiates a new FeatureMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureMeta() *FeatureMeta {
	this := FeatureMeta{}
	return &this
}

// NewFeatureMetaWithDefaults instantiates a new FeatureMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureMetaWithDefaults() *FeatureMeta {
	this := FeatureMeta{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FeatureMeta) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureMeta) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FeatureMeta) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FeatureMeta) SetId(v string) {
	o.Id = &v
}

// GetReferenceNum returns the ReferenceNum field value if set, zero value otherwise.
func (o *FeatureMeta) GetReferenceNum() string {
	if o == nil || IsNil(o.ReferenceNum) {
		var ret string
		return ret
	}
	return *o.ReferenceNum
}

// GetReferenceNumOk returns a tuple with the ReferenceNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureMeta) GetReferenceNumOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceNum) {
		return nil, false
	}
	return o.ReferenceNum, true
}

// HasReferenceNum returns a boolean if a field has been set.
func (o *FeatureMeta) HasReferenceNum() bool {
	if o != nil && !IsNil(o.ReferenceNum) {
		return true
	}

	return false
}

// SetReferenceNum gets a reference to the given string and assigns it to the ReferenceNum field.
func (o *FeatureMeta) SetReferenceNum(v string) {
	o.ReferenceNum = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FeatureMeta) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureMeta) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FeatureMeta) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FeatureMeta) SetName(v string) {
	o.Name = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FeatureMeta) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureMeta) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FeatureMeta) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *FeatureMeta) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FeatureMeta) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureMeta) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FeatureMeta) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FeatureMeta) SetUrl(v string) {
	o.Url = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *FeatureMeta) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureMeta) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *FeatureMeta) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *FeatureMeta) SetResource(v string) {
	o.Resource = &v
}

func (o FeatureMeta) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeatureMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ReferenceNum) {
		toSerialize["reference_num"] = o.ReferenceNum
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	return toSerialize, nil
}

type NullableFeatureMeta struct {
	value *FeatureMeta
	isSet bool
}

func (v NullableFeatureMeta) Get() *FeatureMeta {
	return v.value
}

func (v *NullableFeatureMeta) Set(val *FeatureMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureMeta(val *FeatureMeta) *NullableFeatureMeta {
	return &NullableFeatureMeta{value: val, isSet: true}
}

func (v NullableFeatureMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
