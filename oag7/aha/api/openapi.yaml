openapi: 3.0.0
info:
  description: Articles that matter on social publishing platform
  title: Aha.io API
  version: 1.0.0
servers:
- url: https://secure.aha.io/api/v1
paths:
  /features:
    get:
      description: Get all features
      operationId: getFeatures
      parameters:
      - description: Sub-string to match against feature name or ID
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: UTC timestamp (in ISO8601 format) that the updated_at field must
          be larger than.
        explode: true
        in: query
        name: updated_since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: A string tag value.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: The ID or email address of user to return assigned features for.
        explode: true
        in: query
        name: assigned_to_user
        required: false
        schema:
          type: string
        style: form
      - description: A specific page of results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeaturesResponse"
          description: A list of features
      summary: Get features
      tags:
      - Features
  /features/{feature_id}:
    get:
      description: Get a specific feature
      operationId: getFeature
      parameters:
      - description: "Numeric ID, or key of the feature to be retrieved"
        explode: false
        in: path
        name: feature_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureWrap"
          description: Information for a specific release
      summary: Get feature
      tags:
      - Features
  /ideas/{idea_id}:
    get:
      operationId: getIdea
      parameters:
      - explode: false
        in: path
        name: idea_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdeaResponse"
          description: OK
      summary: Get Idea
      tags:
      - Ideas
  /releases/{release_id}/features:
    get:
      description: Get all features for a release
      operationId: getReleaseFeatures
      parameters:
      - description: "Numeric ID, or key of the release to retrieve features for"
        explode: false
        in: path
        name: release_id
        required: true
        schema:
          type: string
        style: simple
      - description: A specific page of results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeaturesResponse"
          description: A list of features within a data envelope.
      summary: Get all features for a release
      tags:
      - Features
  /products:
    get:
      description: Get products list
      operationId: getProducts
      parameters:
      - description: A specific page of results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsResponse"
          description: A list of products objects within a data envelope.
      summary: Get products
      tags:
      - Products
  /products/{product_id}:
    get:
      description: Get product info
      operationId: getProduct
      parameters:
      - description: "Numeric ID, or key of the feature to be retrieved"
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
          description: A list of products objects within a data envelope.
      summary: Get product
      tags:
      - Products
  /releases/{release_id}:
    get:
      description: Get a specific release
      operationId: getRelease
      parameters:
      - description: "Numeric ID, or key of the release to be retrieved"
        explode: false
        in: path
        name: release_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseWrap"
          description: Information for a specific release
      summary: Get release
      tags:
      - Releases
  /products/{product_id}/releases:
    get:
      description: Get releases for a product release
      operationId: getProductReleases
      parameters:
      - description: "Numeric ID, or key of the product to retrieve releases for."
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      - description: A specific page of results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of results per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleasesResponse"
          description: Information for a specific release
      summary: Get product releases
      tags:
      - Releases
  /products/{product_id}/releases/{release_id}:
    put:
      description: Update a release
      operationId: updateProductRelease
      parameters:
      - description: "Numeric ID, or key of the product to create the release in"
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Numeric ID, or key of the release to be updated"
        explode: false
        in: path
        name: release_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReleaseUpdateWrap"
        description: Release properties to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseWrap"
          description: Information for a specific release
      summary: Update product release
      tags:
      - Releases
components:
  schemas:
    FeatureWrap:
      example:
        feature:
          workflow_status:
            color: color
            name: name
            id: id
            position: 1
            complete: true
          integration_fields:
          - integration_id: integration_id
            service_name: service_name
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: id
            value: value
          - integration_id: integration_id
            service_name: service_name
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: id
            value: value
          reference_num: reference_num
          use_requirements_estimates: true
          resource: resource
          custom_fields:
          - name: name
            type: type
            value: value
            key: key
          - name: name
            type: type
            value: value
            key: key
          release:
            reference_num: reference_num
            release_date: 2000-01-23
            resource: resource
            name: name
            id: id
            external_release_date: 2000-01-23
            released: true
            parking_lot: true
            url: url
            start_date: 2000-01-23
          due_date: 2000-01-23
          created_at: 2000-01-23T04:56:07.000+00:00
          url: url
          progress_source: progress_source
          tags:
          - tags
          - tags
          work_units: 6
          comments_count: 0
          product_id: product_id
          name: name
          id: id
          start_date: 2000-01-23
      properties:
        feature:
          $ref: "#/components/schemas/Feature"
      type: object
    FeaturesResponse:
      example:
        features:
        - reference_num: reference_num
          resource: resource
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          url: url
        - reference_num: reference_num
          resource: resource
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          url: url
        pagination:
          total_records: 0
          total_pages: 6
          current_page: 1
      properties:
        features:
          items:
            $ref: "#/components/schemas/FeatureMeta"
          type: array
        pagination:
          $ref: "#/components/schemas/Pagination"
      type: object
    ReleaseWrap:
      example:
        release:
          reference_num: reference_num
          release_date: 2000-01-23
          resource: resource
          name: name
          id: id
          external_release_date: 2000-01-23
          released: true
          parking_lot: true
          url: url
          start_date: 2000-01-23
      properties:
        release:
          $ref: "#/components/schemas/Release"
      type: object
    ReleasesResponse:
      example:
        pagination:
          total_records: 0
          total_pages: 6
          current_page: 1
        releases:
        - reference_num: reference_num
          release_date: 2000-01-23
          resource: resource
          name: name
          id: id
          external_release_date: 2000-01-23
          released: true
          parking_lot: true
          url: url
          start_date: 2000-01-23
        - reference_num: reference_num
          release_date: 2000-01-23
          resource: resource
          name: name
          id: id
          external_release_date: 2000-01-23
          released: true
          parking_lot: true
          url: url
          start_date: 2000-01-23
      properties:
        releases:
          items:
            $ref: "#/components/schemas/Release"
          type: array
        pagination:
          $ref: "#/components/schemas/Pagination"
      type: object
    Pagination:
      example:
        total_records: 0
        total_pages: 6
        current_page: 1
      properties:
        total_records:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
        current_page:
          format: int64
          type: integer
      type: object
    FeatureMeta:
      example:
        reference_num: reference_num
        resource: resource
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        url: url
      properties:
        id:
          type: string
        reference_num:
          type: string
        name:
          type: string
        created_at:
          format: date-time
          type: string
        url:
          type: string
        resource:
          type: string
      type: object
    Feature:
      description: ""
      example:
        workflow_status:
          color: color
          name: name
          id: id
          position: 1
          complete: true
        integration_fields:
        - integration_id: integration_id
          service_name: service_name
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          value: value
        - integration_id: integration_id
          service_name: service_name
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          value: value
        reference_num: reference_num
        use_requirements_estimates: true
        resource: resource
        custom_fields:
        - name: name
          type: type
          value: value
          key: key
        - name: name
          type: type
          value: value
          key: key
        release:
          reference_num: reference_num
          release_date: 2000-01-23
          resource: resource
          name: name
          id: id
          external_release_date: 2000-01-23
          released: true
          parking_lot: true
          url: url
          start_date: 2000-01-23
        due_date: 2000-01-23
        created_at: 2000-01-23T04:56:07.000+00:00
        url: url
        progress_source: progress_source
        tags:
        - tags
        - tags
        work_units: 6
        comments_count: 0
        product_id: product_id
        name: name
        id: id
        start_date: 2000-01-23
      properties:
        id:
          type: string
        created_at:
          format: date-time
          type: string
        comments_count:
          format: int64
          type: integer
        custom_fields:
          items:
            $ref: "#/components/schemas/CustomField"
          type: array
        due_date:
          description: Due date in YYYY-MM-DD format.
          format: date
          type: string
        name:
          type: string
        product_id:
          type: string
        progress_source:
          type: string
        reference_num:
          type: string
        release:
          $ref: "#/components/schemas/Release"
        resource:
          description: API URL for the resource.
          type: string
        start_date:
          description: Start date in YYYY-MM-DD format.
          format: date
          type: string
        tags:
          items:
            type: string
          type: array
        url:
          description: Web UI URL for the resource.
          type: string
        use_requirements_estimates:
          type: boolean
        work_units:
          format: int64
          type: integer
        workflow_status:
          $ref: "#/components/schemas/FeatureWorkflowStatus"
        integration_fields:
          items:
            $ref: "#/components/schemas/IntegrationField"
          type: array
          x-stoplight:
            id: qb1v3dvhw0rzr
      required:
      - created_at
      - id
      - name
      - reference_num
      type: object
    FeatureWorkflowStatus:
      example:
        color: color
        name: name
        id: id
        position: 1
        complete: true
      properties:
        id:
          type: string
        name:
          type: string
        position:
          format: int64
          type: integer
        complete:
          type: boolean
        color:
          type: string
      type: object
    CustomField:
      example:
        name: name
        type: type
        value: value
        key: key
      properties:
        key:
          type: string
        name:
          type: string
        value:
          type: string
        type:
          type: string
      type: object
    ProductResponse:
      example:
        product:
          product_line: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          resource: resource
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          has_ideas: true
          reference_prefix: reference_prefix
          has_master_features: true
          id: id
          url: url
      properties:
        product:
          $ref: "#/components/schemas/Product"
      type: object
    ProductsResponse:
      example:
        pagination:
          total_records: 0
          total_pages: 6
          current_page: 1
        products:
        - product_line: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          reference_prefix: reference_prefix
          id: id
        - product_line: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          reference_prefix: reference_prefix
          id: id
      properties:
        products:
          items:
            $ref: "#/components/schemas/ProductMeta"
          type: array
        pagination:
          $ref: "#/components/schemas/Pagination"
      type: object
    ProductMeta:
      example:
        product_line: true
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        reference_prefix: reference_prefix
        id: id
      properties:
        id:
          description: A unique identifier for the product.
          type: string
        reference_prefix:
          description: The reference prefix slug for the product.
          type: string
        name:
          description: The name for the product.
          type: string
        product_line:
          description: Whether the product is a product line or not.
          type: boolean
        created_at:
          description: The date-time when the product was created.
          format: date-time
          type: string
      type: object
    Product:
      example:
        product_line: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        resource: resource
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        has_ideas: true
        reference_prefix: reference_prefix
        has_master_features: true
        id: id
        url: url
      properties:
        id:
          description: A unique identifier for the product.
          type: string
        reference_prefix:
          description: The reference prefix slug for the product.
          type: string
        name:
          description: The name for the product.
          type: string
        product_line:
          description: Whether the product is a product line or not.
          type: boolean
        created_at:
          description: The date-time when the product was created.
          format: date-time
          type: string
        updated_at:
          description: The date-time when the product was updated.
          format: date-time
          type: string
        url:
          description: User URL for the project.
          type: string
        resource:
          description: User URL for the project.
          type: string
        has_ideas:
          description: Whether the product has ideas or not.
          type: boolean
        has_master_features:
          description: Whether the product has master features or not.
          type: boolean
      type: object
    Release:
      example:
        reference_num: reference_num
        release_date: 2000-01-23
        resource: resource
        name: name
        id: id
        external_release_date: 2000-01-23
        released: true
        parking_lot: true
        url: url
        start_date: 2000-01-23
      properties:
        id:
          description: A unique identifier for the release.
          type: string
        reference_num:
          description: Release referenence number.
          type: string
        name:
          description: Release name.
          type: string
        start_date:
          description: Start date in YYYY-MM-DD format.
          format: date
          type: string
        release_date:
          description: Release date in YYYY-MM-DD format.
          format: date
          type: string
        external_release_date:
          description: External release date in YYYY-MM-DD format.
          format: date
          type: string
        released:
          type: boolean
        parking_lot:
          type: boolean
        url:
          description: Web URL for release.
          type: string
        resource:
          description: API URL for release.
          type: string
      type: object
    FeatureUpdate:
      properties:
        name:
          description: Name of the feature
          type: string
        description:
          description: Description of the feature and it can include HTML formatting.
          type: string
        created_by:
          description: Email address of user that created the feature.
          type: string
        assigned_to_user:
          description: Email address of user that is assigned the feature.
          type: string
        tags:
          description: Tags can be automatically assigned to the new feature. If more
            than one tag is used then tags should be separated by commas
          type: string
        original_estimate_text:
          description: "Set the original estimated effort in a text format, you can\
            \ use d, h, min (or 'p' for points) to indicate the units to use."
          type: string
        remaining_estimate_text:
          description: " Set the remaining estimated effort in a text format, you\
            \ can use d, h, min (or 'p' for points) to indicate the units to use."
          type: string
        start_date:
          description: Date that work will start on the feature in format YYYY-MM-DD.
          format: date
          type: string
        due_date:
          description: Date that work is due to be completed on the feature in format
            YYYY-MM-DD.
          format: date
          type: string
        release_phase:
          description: Name or id of release phase which the feature belongs to.
          type: string
        initiative:
          description: Name or id of initiative which the feature belongs to.
          type: string
        master_feature:
          description: Name or id of master feature which the feature belongs to.
          type: string
      type: object
    ReleaseUpdateWrap:
      example:
        release:
          release_date: 2000-01-23
          name: name
          development_started_on: 2000-01-23
          external_release_date: 2000-01-23
          parking_lot: true
          start_date: 2000-01-23
      properties:
        release:
          $ref: "#/components/schemas/ReleaseUpdate"
      type: object
    ReleaseUpdate:
      example:
        release_date: 2000-01-23
        name: name
        development_started_on: 2000-01-23
        external_release_date: 2000-01-23
        parking_lot: true
        start_date: 2000-01-23
      properties:
        name:
          description: Release name.
          type: string
        start_date:
          description: Start date in YYYY-MM-DD format.
          format: date
          type: string
        release_date:
          description: Release date in YYYY-MM-DD format.
          format: date
          type: string
        development_started_on:
          description: Date Development started in format YYYY-MM-DD
          format: date
          type: string
        external_release_date:
          description: The external release date for this feature in format YYYY-MM-DD
          format: date
          type: string
        parking_lot:
          type: boolean
      type: object
    User:
      properties:
        first_name:
          description: First name of the user
          type: string
        last_name:
          description: Last name of the user
          type: string
        email:
          description: Email of the user
          format: email
          type: string
        role:
          description: "Permissions of the user in the product one of: product_owner,\
            \ contributor, reviewer, viewer, none"
          enum:
          - product_owner
          - contributor
          - reviewer
          - viewer
          - none
          type: string
      type: object
    Idea:
      example:
        workflow_status:
          color: color
          name: name
          id: id
          position: 1
          complete: true
        reference_num: reference_num
        feature:
          reference_num: reference_num
          resource: resource
          product_id: product_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          url: url
        updated_at: 2000-01-23T04:56:07.000+00:00
        status_changed_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        votes: 0
        id: id
        categories:
        - project_id: project_id
          parent_id: parent_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
        - project_id: project_id
          parent_id: parent_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
      properties:
        id:
          type: string
        name:
          type: string
          x-stoplight:
            id: xy2abr9mr0ana
        reference_num:
          type: string
          x-stoplight:
            id: vnzhmoi467bo4
        feature:
          $ref: "#/components/schemas/IdeaFeature"
        workflow_status:
          $ref: "#/components/schemas/FeatureWorkflowStatus"
        categories:
          items:
            $ref: "#/components/schemas/Category"
          type: array
          x-stoplight:
            id: yqniqpn1c4p4d
        votes:
          type: integer
          x-stoplight:
            id: 2n180oojj7huq
        created_at:
          format: date-time
          type: string
          x-stoplight:
            id: qya5e73kh10r4
        updated_at:
          format: date-time
          type: string
          x-stoplight:
            id: ocz06h2o0uqvl
        status_changed_at:
          format: date-time
          type: string
          x-stoplight:
            id: hu2zt5zdeevyx
      required:
      - categories
      - created_at
      - id
      - name
      - reference_num
      - status_changed_at
      - updated_at
      - votes
      title: Idea
      type: object
      x-stoplight:
        id: nf9fm5lpxxf4s
    IdeaFeature:
      example:
        reference_num: reference_num
        resource: resource
        product_id: product_id
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        url: url
      properties:
        id:
          type: string
        reference_num:
          type: string
          x-stoplight:
            id: pmhimgtx26aas
        name:
          type: string
          x-stoplight:
            id: z9am399tuulq3
        created_at:
          format: date-time
          type: string
          x-stoplight:
            id: jojm2av3bym1c
        url:
          type: string
          x-stoplight:
            id: 1tdkq9chf148w
        resource:
          type: string
          x-stoplight:
            id: 7jkyt08wovxdi
        product_id:
          type: string
          x-stoplight:
            id: wm4pxsru6xxt2
      title: IdeaFeature
      type: object
      x-stoplight:
        id: vntws9p2k5dkr
    IdeaResponse:
      example:
        idea:
          workflow_status:
            color: color
            name: name
            id: id
            position: 1
            complete: true
          reference_num: reference_num
          feature:
            reference_num: reference_num
            resource: resource
            product_id: product_id
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: id
            url: url
          updated_at: 2000-01-23T04:56:07.000+00:00
          status_changed_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          votes: 0
          id: id
          categories:
          - project_id: project_id
            parent_id: parent_id
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: id
          - project_id: project_id
            parent_id: parent_id
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: id
      properties:
        idea:
          $ref: "#/components/schemas/Idea"
      title: IdeaResponse
      type: object
      x-stoplight:
        id: 6umhm6c92ofwo
    Category:
      example:
        project_id: project_id
        parent_id: parent_id
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          type: string
        name:
          type: string
          x-stoplight:
            id: m5ml2rcn2rv13
        parent_id:
          type: string
          x-stoplight:
            id: ogf0nit71t2sx
        project_id:
          type: string
          x-stoplight:
            id: 46w8t67wzzf9p
        created_at:
          format: date-time
          type: string
          x-stoplight:
            id: vri4toh9k6ooj
      required:
      - created_at
      - id
      - name
      title: Category
      type: object
      x-stoplight:
        id: 0hjhgc5e5t5vn
    IntegrationField:
      example:
        integration_id: integration_id
        service_name: service_name
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        value: value
      properties:
        id:
          type: string
        name:
          type: string
          x-stoplight:
            id: qi2sp5tsn8fgz
        value:
          type: string
          x-stoplight:
            id: vuoakqlitqu50
        integration_id:
          type: string
          x-stoplight:
            id: e5rymy3feoytr
        service_name:
          type: string
          x-stoplight:
            id: 8tqiel27kzpi7
        created_at:
          format: date-time
          type: string
          x-stoplight:
            id: 0laij46vrkt7x
      required:
      - created_at
      - id
      - integration_id
      - name
      - service_name
      - value
      title: IntegrationField
      type: object
      x-stoplight:
        id: xltqkvpfjfhef
