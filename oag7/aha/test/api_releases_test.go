/*
Aha.io API

Testing ReleasesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package test

import (
	"context"
	"testing"

	openapiclient "github.com/grokify/go-aha/v3/oag7/aha"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_aha_ReleasesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ReleasesAPIService GetProductReleases", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var productId string

		resp, httpRes, err := apiClient.ReleasesAPI.GetProductReleases(context.Background(), productId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ReleasesAPIService GetRelease", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var releaseId string

		resp, httpRes, err := apiClient.ReleasesAPI.GetRelease(context.Background(), releaseId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ReleasesAPIService UpdateProductRelease", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var productId string
		var releaseId string

		resp, httpRes, err := apiClient.ReleasesAPI.UpdateProductRelease(context.Background(), productId, releaseId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
