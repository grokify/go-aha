/*
Aha.io API

Articles that matter on social publishing platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aha

import (
	"encoding/json"
	"time"
)

// checks if the ProductMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductMeta{}

// ProductMeta struct for ProductMeta
type ProductMeta struct {
	// A unique identifier for the product.
	Id *string `json:"id,omitempty"`
	// The reference prefix slug for the product.
	ReferencePrefix *string `json:"reference_prefix,omitempty"`
	// The name for the product.
	Name *string `json:"name,omitempty"`
	// Whether the product is a product line or not.
	ProductLine *bool `json:"product_line,omitempty"`
	// The date-time when the product was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewProductMeta instantiates a new ProductMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductMeta() *ProductMeta {
	this := ProductMeta{}
	return &this
}

// NewProductMetaWithDefaults instantiates a new ProductMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductMetaWithDefaults() *ProductMeta {
	this := ProductMeta{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductMeta) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductMeta) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductMeta) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProductMeta) SetId(v string) {
	o.Id = &v
}

// GetReferencePrefix returns the ReferencePrefix field value if set, zero value otherwise.
func (o *ProductMeta) GetReferencePrefix() string {
	if o == nil || IsNil(o.ReferencePrefix) {
		var ret string
		return ret
	}
	return *o.ReferencePrefix
}

// GetReferencePrefixOk returns a tuple with the ReferencePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductMeta) GetReferencePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.ReferencePrefix) {
		return nil, false
	}
	return o.ReferencePrefix, true
}

// HasReferencePrefix returns a boolean if a field has been set.
func (o *ProductMeta) HasReferencePrefix() bool {
	if o != nil && !IsNil(o.ReferencePrefix) {
		return true
	}

	return false
}

// SetReferencePrefix gets a reference to the given string and assigns it to the ReferencePrefix field.
func (o *ProductMeta) SetReferencePrefix(v string) {
	o.ReferencePrefix = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProductMeta) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductMeta) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProductMeta) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProductMeta) SetName(v string) {
	o.Name = &v
}

// GetProductLine returns the ProductLine field value if set, zero value otherwise.
func (o *ProductMeta) GetProductLine() bool {
	if o == nil || IsNil(o.ProductLine) {
		var ret bool
		return ret
	}
	return *o.ProductLine
}

// GetProductLineOk returns a tuple with the ProductLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductMeta) GetProductLineOk() (*bool, bool) {
	if o == nil || IsNil(o.ProductLine) {
		return nil, false
	}
	return o.ProductLine, true
}

// HasProductLine returns a boolean if a field has been set.
func (o *ProductMeta) HasProductLine() bool {
	if o != nil && !IsNil(o.ProductLine) {
		return true
	}

	return false
}

// SetProductLine gets a reference to the given bool and assigns it to the ProductLine field.
func (o *ProductMeta) SetProductLine(v bool) {
	o.ProductLine = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ProductMeta) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductMeta) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ProductMeta) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ProductMeta) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o ProductMeta) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ReferencePrefix) {
		toSerialize["reference_prefix"] = o.ReferencePrefix
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProductLine) {
		toSerialize["product_line"] = o.ProductLine
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableProductMeta struct {
	value *ProductMeta
	isSet bool
}

func (v NullableProductMeta) Get() *ProductMeta {
	return v.value
}

func (v *NullableProductMeta) Set(val *ProductMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableProductMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableProductMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductMeta(val *ProductMeta) *NullableProductMeta {
	return &NullableProductMeta{value: val, isSet: true}
}

func (v NullableProductMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
