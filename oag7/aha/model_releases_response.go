/*
Aha.io API

Articles that matter on social publishing platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aha

import (
	"encoding/json"
)

// checks if the ReleasesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReleasesResponse{}

// ReleasesResponse struct for ReleasesResponse
type ReleasesResponse struct {
	Releases   []Release   `json:"releases,omitempty"`
	Pagination *Pagination `json:"pagination,omitempty"`
}

// NewReleasesResponse instantiates a new ReleasesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReleasesResponse() *ReleasesResponse {
	this := ReleasesResponse{}
	return &this
}

// NewReleasesResponseWithDefaults instantiates a new ReleasesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReleasesResponseWithDefaults() *ReleasesResponse {
	this := ReleasesResponse{}
	return &this
}

// GetReleases returns the Releases field value if set, zero value otherwise.
func (o *ReleasesResponse) GetReleases() []Release {
	if o == nil || IsNil(o.Releases) {
		var ret []Release
		return ret
	}
	return o.Releases
}

// GetReleasesOk returns a tuple with the Releases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleasesResponse) GetReleasesOk() ([]Release, bool) {
	if o == nil || IsNil(o.Releases) {
		return nil, false
	}
	return o.Releases, true
}

// HasReleases returns a boolean if a field has been set.
func (o *ReleasesResponse) HasReleases() bool {
	if o != nil && !IsNil(o.Releases) {
		return true
	}

	return false
}

// SetReleases gets a reference to the given []Release and assigns it to the Releases field.
func (o *ReleasesResponse) SetReleases(v []Release) {
	o.Releases = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ReleasesResponse) GetPagination() Pagination {
	if o == nil || IsNil(o.Pagination) {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleasesResponse) GetPaginationOk() (*Pagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ReleasesResponse) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *ReleasesResponse) SetPagination(v Pagination) {
	o.Pagination = &v
}

func (o ReleasesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReleasesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Releases) {
		toSerialize["releases"] = o.Releases
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableReleasesResponse struct {
	value *ReleasesResponse
	isSet bool
}

func (v NullableReleasesResponse) Get() *ReleasesResponse {
	return v.value
}

func (v *NullableReleasesResponse) Set(val *ReleasesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReleasesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReleasesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReleasesResponse(val *ReleasesResponse) *NullableReleasesResponse {
	return &NullableReleasesResponse{value: val, isSet: true}
}

func (v NullableReleasesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReleasesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
